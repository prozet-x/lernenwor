plugins {
	id 'application'
	id 'java'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'org.springframework.boot' version '3.1.2-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'home.prozet-x'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

application {
	mainClass = 'home.prozetx.lernenwor.LernenworApplication'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

jar {
	manifest {
		attributes "Main-Class": "home.prozetx.lernenwor.LernenworApplication"
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

dependencies {
	implementation (
			'org.springframework.boot:spring-boot-starter',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-security',
			'org.liquibase:liquibase-core',
			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
			'org.mapstruct:mapstruct:1.5.5.Final',
			'org.postgresql:postgresql:42.1.4'

	)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	runtimeOnly 'com.h2database:h2'

	annotationProcessor(
			'org.projectlombok:lombok',
			'com.querydsl:querydsl-apt:5.0.0:jakarta',
			'jakarta.persistence:jakarta.persistence-api:3.1.0',
			'org.mapstruct:mapstruct-processor:1.5.5.Final'
	)
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core',
			'info.picocli:picocli:4.7.1',
			'com.h2database:h2',
			'org.postgresql:postgresql:42.7.3',
			'org.liquibase.ext:liquibase-hibernate6:4.21.1',
			'org.springframework.boot:spring-boot-starter-data-jpa'
	)




//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//
//	compileOnly 'org.projectlombok:lombok'
//
//	implementation(
//			'org.springframework.boot:spring-boot-starter-data-jpa',
//			'org.springframework.boot:spring-boot-starter-web',
//			'org.springframework.boot:spring-boot-starter-actuator',
//			'org.springframework.boot:spring-boot-starter-validation',
//			'org.springframework.boot:spring-boot-starter-security',
//			'io.jsonwebtoken:jjwt:0.9.1',
//			// Зависимость для swagger
//			// Позволяет сгенерировать и проматривать интерактивную документацию по API
//			//'org.springdoc:springdoc-openapi-ui:1.7.0',
//			'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0',
//			'org.liquibase:liquibase-core',
//			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
//			//'com.rollbar:rollbar-spring-boot-webmvc:1.10.0',
//			'com.rollbar:rollbar-spring-boot3-webmvc:1.+'
//	)
//
//	testImplementation(
//			'org.springframework.boot:spring-boot-starter-test'
//	)
//
//	annotationProcessor(
//			'org.projectlombok:lombok',
//			'com.querydsl:querydsl-apt:5.0.0:jakarta',
//			'jakarta.persistence:jakarta.persistence-api:3.1.0'
//	)
//
//	liquibaseRuntime(
//			sourceSets.main.output,
//			'org.liquibase:liquibase-core',
//			'info.picocli:picocli:4.7.1',
//			'org.liquibase.ext:liquibase-hibernate6:4.21.1',
//			'org.springframework.boot:spring-boot-starter-data-jpa',
//			'com.h2database:h2',
//	)
//
//	runtimeOnly (
//			'com.h2database:h2',
//			'org.postgresql:postgresql:42.6.0'
//	)
}

//liquibase {
//	activities {
//		main {
//			// Указываем путь, по которому будет сгенерирован файл миграции
//			changelogFile 'src/main/resources/db/changelog/db.changelog-master.yml'
//			// Указывем источник, с которым будут сравниваться изменения
//			// Это база данных, изначально она пустая
//			url 'jdbc:h2:./taskDB'
//			// Сравниваем с моделями, задавая пакет
//			referenceUrl 'hibernate:spring:home.prozetx.lernenwor.model.' +
//					// Указываем диалект
//					'?dialect=org.hibernate.dialect.H2Dialect' +
//					// Указываем правила именования таблиц и столбцов,
//					// чтобы они соответствовали правилам Spring
//					'&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy'
//		}
//	}
//}

//liquibase {
//	activities {
//		main{
//			changelogFile 'src/main/resources/db/changelog/db.changelog-master.yml'
//			url 'jdbc:h2:./lernenwor'
//			referenceUrl 'hibernate:spring:home.prozetx.lernenwor.model.' +
//					'?dialect=org.hibernate.dialect.H2Dialect' +
//					'&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy' +
//					'&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
//			logLevel 'debug'
//		}
//	}
//}

liquibase {
	activities {
		main{
			changelogFile 'src/main/resources/db/changelog/db.changelog-master.yml'
			url 'jdbc:postgresql://maindb:5432/central'
			referenceUrl 'hibernate:spring:home.prozetx.lernenwor.model.' +
					'?dialect=org.hibernate.dialect.PostgreSQLDialect' +
					'&hibernate.connection.driver_class=org.postgresql.Driver' +
//					'&hibernate.connection.url=jdbc:postgresql://maindb:5432/central' +
					'&hibernate.connection.username=postgres' +
					'&hibernate.connection.password=user1234' +
					'&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy' +
					'&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
			logLevel 'debug'
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}

//diffChangelog.mustRunAfter build
