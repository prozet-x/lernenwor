version: "3.8"

services:
  frontend:
    image: prozet/frontend:${GIT_COMMIT}
    ports:
      - "3000:3000"
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile_prod
    depends_on:
      - lernenwor
#        condition: service_healthy

  lernenwor:
    image: prozet/lernenwor:${GIT_COMMIT}
#    build: .
    #restart: on-failure
    depends_on:
      maindb:
        condition: service_healthy
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f http://localhost:5555 || exit 1"]
#      start_period: 10s
#      start_interval: 5s
#      interval: 20s
#      timeout: 10s
#      retries: 3

  maindb:
    image: postgres:alpine3.19
#    restart: always
#    user: postgres
    environment:
#      PGUSER: postgres
#      PGPASSWORD: user1234
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user1234
      POSTGRES_DB: central
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256 --auth-local=scram-sha-256'
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      start_period: 10s
      start_interval: 5s
      interval: 20s
      timeout: 10s
      retries: 3
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-abcd-xyz@list.ru}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8888:80"
    depends_on:
      maindb:
        condition: service_healthy
    volumes:
      - pgadmin:/var/lib/pgadmin

  nginx:
    image: prozet/nginx:${GIT_COMMIT}
    ports:
      - "80:80"
    depends_on:
      - frontend
      - pgadmin
      - lernenwor
      - maindb

volumes:
  postgres:
  pgadmin: